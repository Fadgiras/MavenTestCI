# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: GITHUB_ACTOR
        server-password: GITHUB_TOKEN

    - name: Extract version from POM
      id: version
      run: |
        cd ${{ github.workspace }}/demo
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version from POM: $VERSION"

    - name: Build with Maven
      run: cd ${{ github.workspace }}/demo && mvn -B package --file pom.xml

    - name: List target directory contents
      run: cd ${{ github.workspace }}/demo && ls -la target/

    - name: Publish to GitHub Packages Apache Maven
      run: |
        cd ${{ github.workspace }}/demo
        warFile=$(find target/ -name "*.war" | head -1)
        if [ -n "$warFile" ]; then
          echo "Found WAR file: $warFile"
          mvn deploy:deploy-file \
            -Dfile="$warFile" \
            -DgroupId=com.fadgiras \
            -DartifactId=demo \
            -Dversion=${{ steps.version.outputs.VERSION }} \
            -Dpackaging=war \
            -DrepositoryId=github \
            -Durl=https://maven.pkg.github.com/Fadgiras/MavenTestCI \
            -DgeneratePom=false \
            -Dchecksum=false
        else
          echo "No WAR file found in target directory"
          exit 1
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}